- hosts: localhost
  tasks:
    - name: Install packages with Homebrew
      homebrew:
        name: "{{ item }}"
      loop:
        - git
        - wezterm
        - neovim
        - fzf
        - ripgrep
        - stow
        - starship
        - docker
        - telegram
        - discord
        - libpq
        - eza
        - asdf
        - zsh-autosuggestions
        - zsh-syntax-highlighting

    - name: Install Oh My Zsh
      shell: |
        curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash
      args:
        executable: /bin/bash
        creates: ~/.oh-my-zsh

    # Ensure ~/.config directory exists
    - name: Ensure ~/.config directory exists
      file:
        path: ~/.config
        state: directory

    # Remove existing Neovim config symlink before creating the new one
    - name: Remove existing Neovim config symlink
      file:
        path: ~/.config/nvim
        state: absent

    # Stow Neovim config as directory-level symlink in ~/.config
    - name: Stow Neovim config in ~/.config
      ansible.builtin.command: stow -d ~/dotfiles -t ~/.config nvim 

    # Remove existing WezTerm config symlink before creating the new one
    - name: Remove existing WezTerm config symlink
      file:
        path: ~/.config/wezterm
        state: absent

    # Stow WezTerm config as directory-level symlink in ~/.config
    - name: Stow WezTerm config in ~/.config
      ansible.builtin.command: stow -d ~/dotfiles -t ~/.config wezterm 

    # Remove existing .zshrc symlink before creating the new one
    - name: Remove existing .zshrc symlink
      file:
        path: ~/.zshrc
        state: absent

    # Stow Zsh config as symlink for .zshrc
    - name: Stow Zsh config in home directory
      ansible.builtin.command: stow -d ~/dotfiles -t ~ zsh --no-folding 

    # Install asdf plugins
    - name: Install asdf plugins
      shell: |
        asdf plugin add erlang
        asdf plugin add elixir
        asdf plugin add ruby
        asdf plugin add golang
      args:
        executable: /bin/bash

    # Install Erlang
    - name: Install Erlang
      shell: "asdf install erlang latest && asdf global erlang latest"
      args:
        executable: /bin/bash

    # Install Elixir
    - name: Install Elixir
      shell: "asdf install elixir latest && asdf global elixir latest"
      args:
        executable: /bin/bash

    # Install Ruby
    - name: Install Ruby
      shell: "asdf install ruby latest && asdf global ruby latest"
      args:
        executable: /bin/bash

    # Install Go
    - name: Install Go
      shell: "asdf install golang latest && asdf global golang latest"
      args:
        executable: /bin/bash

    - name: Install NVM
      ansible.builtin.command: /bin/bash -c "$(curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash)"
      args:
        creates: ~/.nvm/nvm.sh

    - name: Install latest Node.js with nvm
      shell: "nvm install node && nvm use node"
      args:
        executable: /bin/bash

    - name: Ensure SSH directory exists
      file:
        path: "~/.ssh"
        state: directory
        mode: 0700

    - name: Decrypt and copy SSH private key
      ansible.builtin.copy:
        src: ~/dotfiles/ssh/id_ed25519
        dest: ~/.ssh/id_ed25519
        mode: 0600

    - name: Copy SSH public key
      ansible.builtin.copy:
        src: ~/dotfiles/ssh/id_ed25519.pub
        dest: ~/.ssh/id_ed25519.pub
        mode: 0644

    - name: Ensure correct permissions for SSH private key
      file:
        path: "~/.ssh/id_ed25519"
        mode: '0600'

    - name: Ensure correct permissions for SSH public key
      file:
        path: "~/.ssh/id_ed25519.pub"
        mode: '0644'

    - name: Download JetBrains Mono font
      ansible.builtin.get_url:
        url: https://github.com/JetBrains/JetBrainsMono/releases/download/v2.304/JetBrainsMono-2.304.zip
        dest: /tmp/JetBrainsMono.zip

    - name: Unzip JetBrains Mono font
      ansible.builtin.unarchive:
        src: /tmp/JetBrainsMono.zip
        dest: /tmp/JetBrainsMono/
        remote_src: yes

    - name: Copy JetBrains Mono fonts to system font directory
      ansible.builtin.copy:
        src: /tmp/JetBrainsMono/fonts/ttf/
        dest: /Library/Fonts/
        mode: 0644
        owner: root
        group: wheel
        remote_src: yes
        force: yes

    - name: Clean up downloaded JetBrains Mono files
      ansible.builtin.file:
        path: /tmp/JetBrainsMono.zip
        state: absent

    - name: Clean up unzipped JetBrains Mono directory
      ansible.builtin.file:
        path: /tmp/JetBrainsMono
        state: absent
        
    - name: Download Docker Desktop .dmg
      ansible.builtin.get_url:
        url: "https://desktop.docker.com/mac/stable/Docker.dmg"
        dest: /tmp/Docker.dmg
        mode: '0644'

    - name: Attach Docker.dmg
      ansible.builtin.command: sudo hdiutil attach /tmp/Docker.dmg
      register: hdiutil_output

    - name: Install Docker Desktop
      ansible.builtin.command: sudo /Volumes/Docker/Docker.app/Contents/MacOS/install --accept-license

    - name: Detach Docker.dmg
      ansible.builtin.command: sudo hdiutil detach /Volumes/Docker

    - name: Remove Docker.dmg
      ansible.builtin.file:
        path: /tmp/Docker.dmg
        state: absent
